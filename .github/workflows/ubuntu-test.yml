# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Ubuntu tests TODO

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  S1A_2016_Kumamoto_Earthquake:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install system dependencies
      run: |
        uname -a
        # prepare system
        sudo apt update
        # https://github.com/gmtsar/gmtsar/wiki/GMTSAR-Wiki-Page
        sudo apt install -y csh subversion autoconf libtiff5-dev libhdf5-dev wget
        sudo apt install -y liblapack-dev
        sudo apt install -y gfortran
        sudo apt install -y g++
        sudo apt install -y libgmt-dev
        sudo apt install -y gmt-dcw gmt-gshhg
        # gmt-gshhg-full should be installed automatically (it is required to use GMTSAR landmask)
        sudo apt install -y gmt
        # add missed package
        sudo apt install -y make
    - name: Compile GMTSAR
      run: |
        autoconf
        ./configure --with-orbits-dir=/tmp
        make
        make install
        # check installation
        export PATH=$PATH:/home/runner/work/gmtsar/gmtsar/bin
        echo "Start gmtsar_sharedir.csh"
        gmtsar_sharedir.csh
    - name: Install PyGMTSAR
      run: |
        # upgrade package to resolve dependencies
        pip3 install click --upgrade
        pip3 install -e ./pygmtsar/
    - name: Download dataset
      working-directory: tests
      run: |
        # download iCloud datasets
        cat > icloud_urls.txt <<- END
        https://www.icloud.com/iclouddrive/04946wsi9N5g0W6beTl_KUvQg#S1A_IW_SLC__1SSV_20160408T091355_20160408T091430_010728_01001F_83EB.zip
        https://www.icloud.com/iclouddrive/059EHU1iazg_CDEBWd7CPjXnQ#S1A_IW_SLC__1SSV_20160420T091355_20160420T091423_010903_010569_F9CE.zip
        https://www.icloud.com/iclouddrive/042d2NP0tDVFz_N39jCu5yyVA#S1A_Kumamoto_Earthquake_ESA_Sentinel_1_Toolbox.jpg
        END
        cut -f5 -d '/' icloud_urls.txt | cut -f1 -d '#' | sed -E 's/(.*)/{"shortGUIDs":[{"value":"\1"}]}/' > requests.txt
        cut -f5 -d '/' icloud_urls.txt | cut -f2 -d '#' > fnames.txt
        paste -d ' ' requests.txt fnames.txt  | while read LINE
        do
            request=$(echo "$LINE"| cut -d ' ' -f1)
            fname=$(echo "$LINE"| cut -d ' ' -f2)
            echo "request: $request fname: $fname"
            url=$(curl -s 'https://ckdatabasews.icloud.com/database/1/com.apple.cloudkit/production/public/records/resolve' \
            --data-raw "${request}" --compressed | jq -r '.results[0].rootRecord.fields.fileContent.value.downloadURL')
            curl -so "${fname}" "${url}"
        done
        # unpack to data directory
        mkdir -p data
        unzip -j -n S1A_IW_SLC__1SSV_20160408T091355_20160408T091430_010728_01001F_83EB.zip \
            '*.SAFE/*/s1?-iw1-slc-vv-*-001.xml' -d data
        unzip -j -n S1A_IW_SLC__1SSV_20160408T091355_20160408T091430_010728_01001F_83EB.zip \
            '*.SAFE/*/s1?-iw1-slc-vv-*-001.tiff' -d data
        unzip -j -n S1A_IW_SLC__1SSV_20160420T091355_20160420T091423_010903_010569_F9CE.zip \
            '*.SAFE/*/s1?-iw1-slc-vv-*-001.xml' -d data
        unzip -j -n S1A_IW_SLC__1SSV_20160420T091355_20160420T091423_010903_010569_F9CE.zip \
            '*.SAFE/*/s1?-iw1-slc-vv-*-001.tiff' -d data
        # cleanup
        rm *.zip
        # check
        df -h
        ls data
    - name: Run test
      working-directory: tests
      run: |
        export PATH=$PATH:/home/runner/work/gmtsar/gmtsar/bin
        python3 ./S1A_2016_Kumamoto_Earthquake.py
