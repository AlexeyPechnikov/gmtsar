# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Ubuntu tests

on:
  push:
    branches: [ "pygmtsar2" ]
  pull_request:
    branches: [ "pygmtsar2" ]

permissions:
  contents: read

jobs:
  Imperial_Valley_2015:

    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "ubuntu-24.04-arm"]
        python-version: ["3.13"]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Print runner details
      run: uname -a
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install system dependencies
      run: |
        # prepare system
        sudo apt update
        # https://github.com/gmtsar/gmtsar/wiki/GMTSAR-Wiki-Page
        sudo apt install -y csh subversion autoconf libtiff5-dev libhdf5-dev wget
        sudo apt install -y liblapack-dev
        sudo apt install -y gfortran
        sudo apt install -y g++
        sudo apt install -y libgmt-dev
        # gmt-gshhg-full should be installed automatically (it is required to use GMTSAR landmask)
        sudo apt install -y gmt
        # add missed package
        sudo apt install -y make
        # vtk rendering
        sudo apt install -y xvfb
    - name: Compile GMTSAR
      run: |
        git config --global advice.detachedHead false
        git clone --branch master https://github.com/gmtsar/gmtsar GMTSAR
        cd GMTSAR
        git checkout e98ebc0f4164939a4780b1534bac186924d7c998
        autoconf
        ./configure --with-orbits-dir=/tmp CFLAGS='-z muldefs' LDFLAGS='-z muldefs'
        make CFLAGS='-z muldefs' LDFLAGS='-z muldefs'
        make install
    - name: Install PyGMTSAR
      run: |
        # rasterio build required on ARM64 only
        if [ "$(uname -m)" = "aarch64" ]; then
          echo "Installing ARM64-specific dependencies..."
          sudo apt install -y libhdf5-dev pkg-config libgdal-dev
        else
          echo "Skipping ARM64-specific dependencies..."
        fi
        pip3 install pyvista panel ipyleaflet
        pip3 install -e ./pygmtsar/
    - name: Run test
      working-directory: tests
      run: |
        SCRIPT=imperial_valley_2015.py
        export PATH=$PATH:${{ github.workspace }}/GMTSAR/bin
        Xvfb :99 -screen 0 800x600x24 > /dev/null 2>&1 &
        export DISPLAY=:99
        export XVFB_PID=$!
        # remove Google Colab specific commands and add __main__ section
        cat "$SCRIPT" \
            | sed '/if \x27google\.colab\x27 in sys\.modules:/,/^$/d' \
            | sed 's/^[[:blank:]]*!.*$//' \
            | awk '/username = \x27GoogleColab2023\x27/ {print "if __name__ == \x27__main__\x27:"; indent=1} {if(indent) sub(/^/, "    "); print}' \
            > "$SCRIPT.fixed.py"
        python3 "$SCRIPT.fixed.py"
    - name: Archive test results
      uses: actions/upload-artifact@v4
      with:
        name: Plots (${{ matrix.os }}, ${{ matrix.python-version }})
        path: tests/*.jpg
        if-no-files-found: error
