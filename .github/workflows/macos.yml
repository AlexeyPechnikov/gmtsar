# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: MacOS tests

on:
  push:
    branches: [ "pygmtsar2" ]
  pull_request:
    branches: [ "pygmtsar2" ]

permissions:
  contents: read

jobs:
  Imperial_Valley_2015:

    strategy:
      fail-fast: false
      matrix:
        os: [macos-13, macos-12]
        python-version: ["3.12", "3.11"]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install system dependencies
      run: |
        uname -a
        # prepare system
        brew install wget libtiff hdf5 gmt ghostscript autoconf
    - name: Compile GMTSAR
      run: |
        git config --global advice.detachedHead false
        git clone --branch master https://github.com/gmtsar/gmtsar GMTSAR
        cd GMTSAR
        git checkout e98ebc0f4164939a4780b1534bac186924d7c998
        autoconf
        ./configure --with-orbits-dir=/tmp
        make
        make install
        # check installation
        export PATH=$PATH:/Users/runner/work/gmtsar/gmtsar/GMTSAR/bin
        echo "Start gmtsar_sharedir.csh"
        gmtsar_sharedir.csh
    - name: Install PyGMTSAR
      run: |
        # upgrade package to resolve dependencies
        #pip3 install click --upgrade
        #pip3 install matplotlib seaborn
        pip3 install -e ./pygmtsar/
    - name: Run test
      working-directory: tests
      run: |
        export PATH=$PATH:/Users/runner/work/gmtsar/gmtsar/GMTSAR/bin
        # remove Google Colab specific commands
        sed -i '' '/if \x27google\.colab\x27 in sys\.modules:/,/^$/d' imperial_valley_2015.py
        ulimit -n 10000 python3 imperial_valley_2015.py
    - name: Archive test results
      uses: actions/upload-artifact@v3
      with:
        name: Plots (${{ matrix.os }}, ${{ matrix.python-version }})
        path: tests/*.jpg
        if-no-files-found: error
