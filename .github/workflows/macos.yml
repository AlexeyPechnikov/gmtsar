# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: MacOS tests

on:
  push:
    branches: [ "pygmtsar" ]
  pull_request:
    branches: [ "pygmtsar" ]

permissions:
  contents: read

jobs:
  S1A_Stack_CPGF_T173:

    strategy:
      fail-fast: false
      matrix:
        os: [macos-12, macos-11]
        python-version: ["3.8", "3.9", "3.10"]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install system dependencies
      run: |
        uname -a
        # prepare system
        brew install wget libtiff hdf5 gmt ghostscript autoconf
    - name: Compile GMTSAR
      run: |
        git clone --branch master https://github.com/gmtsar/gmtsar GMTSAR
        cd GMTSAR
        autoconf
        ./configure --with-orbits-dir=/tmp
        make
        make install
        # check installation
        export PATH=$PATH:/Users/runner/work/gmtsar/gmtsar/GMTSAR/bin
        echo "Start gmtsar_sharedir.csh"
        gmtsar_sharedir.csh
    - name: Install PyGMTSAR
      run: |
        # upgrade package to resolve dependencies
        pip3 install click --upgrade
        pip3 install matplotlib seaborn
        pip3 install -e ./pygmtsar/
    - name: Cache dataset
      uses: actions/cache@v3
      with:
        path: tests/S1A_Stack_CPGF_T173.tar.gz
        key: S1A_Stack_CPGF_T173.tar.gz
        restore-keys: S1A_Stack_CPGF_T173
    - name: Run test
      working-directory: tests
      run: |
        export PATH=$PATH:/Users/runner/work/gmtsar/gmtsar/GMTSAR/bin
        sh ./S1A_Stack_CPGF_T173.sh
    - name: Archive test results
      uses: actions/upload-artifact@v3
      with:
        name: Plots (${{ matrix.os }}, ${{ matrix.python-version }})
        path: tests/*.jpg
        if-no-files-found: error
